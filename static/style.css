@import "https://rsms.me/inter/inter.css";

@import "tailwindcss";

@source "../components";

@source "../islands";

@source "../routes";

@font-face {
	font-family: Monaspace Argon;
	font-style: normal;
	font-weight: 200 800;
	font-display: swap;
	src: url("/fonts/MonaspaceArgonVarVF[wght,wdth,slnt].woff2") format("woff2");
}

@font-face {
	font-family: Monaspace Krypton;
	font-style: normal;
	font-weight: 200 800;
	font-display: swap;
	src: url("/fonts/MonaspaceKryptonVarVF[wght,wdth,slnt].woff2") format("woff2");
}

@font-face {
	font-family: Monaspace Neon;
	font-style: normal;
	font-weight: 200 800;
	font-display: swap;
	src: url("/fonts/MonaspaceNeonVarVF[wght,wdth,slnt].woff2") format("woff2");
}

@font-face {
	font-family: Monaspace Radon;
	font-style: normal;
	font-weight: 200 800;
	font-display: swap;
	src: url("/fonts/MonaspaceRadonVarVF[wght,wdth,slnt].woff2") format("woff2");
}

@font-face {
	font-family: Monaspace Xenon;
	font-style: normal;
	font-weight: 200 800;
	font-display: swap;
	src: url("/fonts/MonaspaceXenonVarVF[wght,wdth,slnt].woff2") format("woff2");
}

@font-face {
	font-family: m6x11plus;
	font-display: swap;
	src: url("/fonts/m6x11plus.ttf") format("truetype");
}

@theme inline {
	--font-sans: m6x11plus, sans-serif;

	--font-mono: Monaspace Neon, monospace;

	--color-balatro-blue-50: oklch(0.9220004964228452 0.017972334317812918 247.35191350644294);
	--color-balatro-blue-100: oklch(0.8948817384465355 0.035944668635625836 247.35191350644294);
	--color-balatro-blue-200: oklch(0.8406442224939161 0.07188933727125167 247.35191350644294);
	--color-balatro-blue-300: oklch(0.7864067065412967 0.10783400590687751 247.35191350644294);
	--color-balatro-blue-400: oklch(0.7321691905886774 0.14377867454250334 247.35191350644294);
	--color-balatro-blue-500: oklch(0.677931674636058 0.17972334317812919 247.35191350644294);
	--color-balatro-blue-600: oklch(0.5778728940922916 0.14377867454250337 247.35191350644294);
	--color-balatro-blue-700: oklch(0.4778141135485252 0.10783400590687753 247.35191350644294);
	--color-balatro-blue-800: oklch(0.3777553330047587 0.07188933727125166 247.35191350644294);
	--color-balatro-blue-900: oklch(0.27769655246099234 0.03594466863562584 247.35191350644294);
	--color-balatro-blue-950: oklch(0.2276671621891092 0.01797233431781292 247.35191350644294);
	--color-balatro-gray-50: oklch(0.902678549397131 0.002497694619478772 211.1528587554597);
	--color-balatro-gray-100: oklch(0.8562378443951071 0.004995389238957544 211.1528587554597);
	--color-balatro-gray-200: oklch(0.7633564343910593 0.009990778477915088 211.1528587554597);
	--color-balatro-gray-300: oklch(0.6704750243870115 0.014986167716872632 211.1528587554597);
	--color-balatro-gray-400: oklch(0.5775936143829636 0.019981556955830176 211.1528587554597);
	--color-balatro-gray-500: oklch(0.4847122043789158 0.02497694619478772 211.1528587554597);
	--color-balatro-gray-600: oklch(0.4232973178865779 0.019981556955830176 211.1528587554597);
	--color-balatro-gray-700: oklch(0.36188243139423987 0.014986167716872634 211.1528587554597);
	--color-balatro-gray-800: oklch(0.30046754490190186 0.009990778477915086 211.1528587554597);
	--color-balatro-gray-900: oklch(0.23905265840956388 0.004995389238957544 211.1528587554597);
	--color-balatro-gray-950: oklch(0.20834521516339494 0.0024976946194787755 211.1528587554597);
	--color-balatro-orange-50: oklch(0.9327103557850467 0.01702680563595518 69.80056091776714);
	--color-balatro-orange-100: oklch(0.9163014571709385 0.03405361127191036 69.80056091776714);
	--color-balatro-orange-200: oklch(0.8834836599427222 0.06810722254382072 69.80056091776714);
	--color-balatro-orange-300: oklch(0.8506658627145057 0.10216083381573106 69.80056091776714);
	--color-balatro-orange-400: oklch(0.8178480654862894 0.13621444508764144 69.80056091776714);
	--color-balatro-orange-500: oklch(0.785030268258073 0.17026805635955178 69.80056091776714);
	--color-balatro-orange-600: oklch(0.6635517689899036 0.13621444508764144 69.80056091776714);
	--color-balatro-orange-700: oklch(0.5420732697217342 0.10216083381573109 69.80056091776714);
	--color-balatro-orange-800: oklch(0.4205947704535647 0.06810722254382069 69.80056091776714);
	--color-balatro-orange-900: oklch(0.29911627118539535 0.03405361127191034 69.80056091776714);
	--color-balatro-orange-950: oklch(0.23837702155131069 0.017026805635955183 69.80056091776714);
	--color-balatro-red-50: oklch(0.9233842218764157 0.019564659391684704 27.00209258244179);
	--color-balatro-red-100: oklch(0.8976491893536764 0.03912931878336941 27.00209258244179);
	--color-balatro-red-200: oklch(0.846179124308198 0.07825863756673881 27.00209258244179);
	--color-balatro-red-300: oklch(0.7947090592627196 0.11738795635010821 27.00209258244179);
	--color-balatro-red-400: oklch(0.7432389942172412 0.15651727513347763 27.00209258244179);
	--color-balatro-red-500: oklch(0.6917689291717627 0.19564659391684702 27.00209258244179);
	--color-balatro-red-600: oklch(0.5889426977208554 0.15651727513347763 27.00209258244179);
	--color-balatro-red-700: oklch(0.486116466269948 0.11738795635010824 27.00209258244179);
	--color-balatro-red-800: oklch(0.38329023481904057 0.07825863756673879 27.00209258244179);
	--color-balatro-red-900: oklch(0.2804640033681332 0.03912931878336939 27.00209258244179);
	--color-balatro-red-950: oklch(0.22905088764267956 0.019564659391684724 27.00209258244179);

	--drop-shadow-dynamic: var(--shadow-x) 4px 0px #00000040;
	--drop-shadow-extrude: 0px 4px 0px #00000080;
}

@utility rounded-pixel-1-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(0px 100%, 100% 100%, 100% 0px, 0px 0px);
	}
}

@utility rounded-pixel-2-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(0px calc(100% - calc(1px * --value(integer))), calc(1px * --value(integer)) calc(100% - calc(1px * --value(integer))), calc(1px * --value(integer)) 100%, calc(100% - calc(1px * --value(integer))) 100%, calc(100% - calc(1px * --value(integer))) calc(100% - calc(1px * --value(integer))), 100% calc(100% - calc(1px * --value(integer))), 100% calc(1px * --value(integer)), calc(100% - calc(1px * --value(integer))) calc(1px * --value(integer)), calc(100% - calc(1px * --value(integer))) 0px, calc(1px * --value(integer)) 0px, calc(1px * --value(integer)) calc(1px * --value(integer)), 0px calc(1px * --value(integer)));
	}
}

@utility rounded-pixel-4-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(
			0px calc(100% - calc(2px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(2px * --value(integer)) 100%,
			calc(100% - calc(2px * --value(integer))) 100%,
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			100% calc(100% - calc(2px * --value(integer))),
			100% calc(2px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) 0px,
			calc(2px * --value(integer)) 0px,
			calc(2px * --value(integer)) calc(1px * --value(integer)),
			calc(1px * --value(integer)) calc(1px * --value(integer)),
			calc(1px * --value(integer)) calc(2px * --value(integer)),
			0px calc(2px * --value(integer))
		);
	}
}

@utility rounded-pixel-5-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(
			0px calc(100% - calc(3px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(3px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(3px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(3px * --value(integer)) 100%,
			calc(100% - calc(3px * --value(integer))) 100%,
			calc(100% - calc(3px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(3px * --value(integer))),
			100% calc(100% - calc(3px * --value(integer))),
			100% calc(3px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(3px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) 0px,
			calc(3px * --value(integer)) 0px,
			calc(3px * --value(integer)) calc(1px * --value(integer)),
			calc(2px * --value(integer)) calc(1px * --value(integer)),
			calc(1px * --value(integer)) calc(2px * --value(integer)),
			calc(1px * --value(integer)) calc(3px * --value(integer)),
			0px calc(3px * --value(integer))
		);
	}
}

@utility rounded-pixel-6-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(
			0px calc(100% - calc(4px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(4px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(4px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(4px * --value(integer)) 100%,
			calc(100% - calc(4px * --value(integer))) 100%,
			calc(100% - calc(4px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(4px * --value(integer))),
			100% calc(100% - calc(4px * --value(integer))),
			100% calc(4px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(4px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(4px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(4px * --value(integer))) 0px,
			calc(4px * --value(integer)) 0px,
			calc(4px * --value(integer)) calc(1px * --value(integer)),
			calc(2px * --value(integer)) calc(1px * --value(integer)),
			calc(2px * --value(integer)) calc(2px * --value(integer)),
			calc(1px * --value(integer)) calc(2px * --value(integer)),
			calc(1px * --value(integer)) calc(4px * --value(integer)),
			0px calc(4px * --value(integer))
		);
	}
}

@utility rounded-pixel-7-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(
			0px calc(100% - calc(4px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(4px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(3px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(3px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(3px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(3px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(4px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(4px * --value(integer)) 100%,
			calc(100% - calc(4px * --value(integer))) 100%,
			calc(100% - calc(4px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(3px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(3px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(3px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(3px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(4px * --value(integer))),
			100% calc(100% - calc(4px * --value(integer))),
			100% calc(4px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(4px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(3px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(3px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(4px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(4px * --value(integer))) 0px,
			calc(4px * --value(integer)) 0px,
			calc(4px * --value(integer)) calc(1px * --value(integer)),
			calc(3px * --value(integer)) calc(1px * --value(integer)),
			calc(3px * --value(integer)) calc(2px * --value(integer)),
			calc(2px * --value(integer)) calc(2px * --value(integer)),
			calc(2px * --value(integer)) calc(3px * --value(integer)),
			calc(1px * --value(integer)) calc(3px * --value(integer)),
			calc(1px * --value(integer)) calc(4px * --value(integer)),
			0px calc(4px * --value(integer))
		);
	}
}

@utility rounded-pixel-8-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(
			0px calc(100% - calc(5px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(5px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(3px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(3px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(3px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(3px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(5px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(5px * --value(integer)) 100%,
			calc(100% - calc(5px * --value(integer))) 100%,
			calc(100% - calc(5px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(3px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(3px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(3px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(3px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(5px * --value(integer))),
			100% calc(100% - calc(5px * --value(integer))),
			100% calc(5px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(5px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(3px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(3px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(5px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(5px * --value(integer))) 0px,
			calc(5px * --value(integer)) 0px,
			calc(5px * --value(integer)) calc(1px * --value(integer)),
			calc(3px * --value(integer)) calc(1px * --value(integer)),
			calc(3px * --value(integer)) calc(2px * --value(integer)),
			calc(2px * --value(integer)) calc(2px * --value(integer)),
			calc(2px * --value(integer)) calc(3px * --value(integer)),
			calc(1px * --value(integer)) calc(3px * --value(integer)),
			calc(1px * --value(integer)) calc(5px * --value(integer)),
			0px calc(5px * --value(integer))
		);
	}
}

@utility bg-pixel-* {
	@apply bg-[--value(--color-*)];
	@apply bg-[--value(--color-*)]/[calc(--modifier(integer)_*_1%)];
	&[class*="rounded-pixel-"] {
		@apply bg-transparent;
		&::after {
			@apply bg-[--value(--color-*)];
			@apply bg-[--value(--color-*)]/[calc(--modifier(integer)_*_1%)];
		}
	}
}

@utility text-shadow-elevated {
	@apply relative flex z-0;
	&::before {
		@apply absolute text-transparent scale-95 -z-1;
		content: var(--text-shadow-elevated-content);

		text-shadow: 0px 3px 0px #00000040;
	}
}
