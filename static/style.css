@import "https://rsms.me/inter/inter.css";

@import "tailwindcss";

@source "../components/**";

@source "../islands/**";

@source "../routes/**";

@font-face {
	font-family: Monaspace Neon;
	font-style: normal;
	font-weight: 200 800;
	font-display: swap;
	src: url("/fonts/MonaspaceNeonVarVF[wght,wdth,slnt].woff2") format("woff2");
}

@font-face {
	font-family: m6x11plus;
	font-display: swap;
	src: url("/fonts/m6x11plus.ttf") format("truetype");
}

@theme inline {
	--font-sans: m6x11plus, sans-serif;

	--font-mono: Monaspace Neon, monospace;

	--color-balatro-blue-50: oklch(0.9677931674636058 0.17972334317812919 247.35191350644294);
	--color-balatro-blue-100: oklch(0.9355863349272115 0.17972334317812919 247.35191350644294);
	--color-balatro-blue-200: oklch(0.8711726698544232 0.17972334317812919 247.35191350644294);
	--color-balatro-blue-300: oklch(0.8067590047816348 0.17972334317812919 247.35191350644294);
	--color-balatro-blue-400: oklch(0.7423453397088464 0.17972334317812919 247.35191350644294);
	--color-balatro-blue-500: oklch(0.677931674636058 0.17972334317812919 247.35191350644294);
	--color-balatro-blue-600: oklch(0.577931674636058 0.17972334317812919 247.35191350644294);
	--color-balatro-blue-700: oklch(0.477931674636058 0.17972334317812919 247.35191350644294);
	--color-balatro-blue-800: oklch(0.3779316746360579 0.17972334317812919 247.35191350644294);
	--color-balatro-blue-900: oklch(0.27793167463605795 0.17972334317812919 247.35191350644294);
	--color-balatro-blue-950: oklch(0.227931674636058 0.17972334317812919 247.35191350644294);
	--color-balatro-gray-50: oklch(0.9347122043789158 0.02497694619478772 211.1528587554597);
	--color-balatro-gray-100: oklch(0.8847122043789158 0.02497694619478772 211.1528587554597);
	--color-balatro-gray-200: oklch(0.7847122043789159 0.02497694619478772 211.1528587554597);
	--color-balatro-gray-300: oklch(0.6847122043789158 0.02497694619478772 211.1528587554597);
	--color-balatro-gray-400: oklch(0.5847122043789158 0.02497694619478772 211.1528587554597);
	--color-balatro-gray-500: oklch(0.4847122043789158 0.02497694619478772 211.1528587554597);
	--color-balatro-gray-600: oklch(0.3877697635031327 0.02497694619478772 211.1528587554597);
	--color-balatro-gray-700: oklch(0.29082732262734956 0.02497694619478772 211.1528587554597);
	--color-balatro-gray-800: oklch(0.19388488175156626 0.02497694619478772 211.1528587554597);
	--color-balatro-gray-900: oklch(0.09694244087578313 0.02497694619478772 211.1528587554597);
	--color-balatro-gray-950: oklch(0.04847122043789165 0.02497694619478772 211.1528587554597);
	--color-balatro-orange-50: oklch(0.9785030268258073 0.17026805635955178 69.80056091776714);
	--color-balatro-orange-100: oklch(0.9570060536516146 0.17026805635955178 69.80056091776714);
	--color-balatro-orange-200: oklch(0.9140121073032292 0.17026805635955178 69.80056091776714);
	--color-balatro-orange-300: oklch(0.8710181609548437 0.17026805635955178 69.80056091776714);
	--color-balatro-orange-400: oklch(0.8280242146064584 0.17026805635955178 69.80056091776714);
	--color-balatro-orange-500: oklch(0.785030268258073 0.17026805635955178 69.80056091776714);
	--color-balatro-orange-600: oklch(0.685030268258073 0.17026805635955178 69.80056091776714);
	--color-balatro-orange-700: oklch(0.585030268258073 0.17026805635955178 69.80056091776714);
	--color-balatro-orange-800: oklch(0.48503026825807294 0.17026805635955178 69.80056091776714);
	--color-balatro-orange-900: oklch(0.38503026825807296 0.17026805635955178 69.80056091776714);
	--color-balatro-orange-950: oklch(0.335030268258073 0.17026805635955178 69.80056091776714);
	--color-balatro-red-50: oklch(0.9691768929171762 0.19564659391684702 27.00209258244179);
	--color-balatro-red-100: oklch(0.9383537858343526 0.19564659391684702 27.00209258244179);
	--color-balatro-red-200: oklch(0.876707571668705 0.19564659391684702 27.00209258244179);
	--color-balatro-red-300: oklch(0.8150613575030576 0.19564659391684702 27.00209258244179);
	--color-balatro-red-400: oklch(0.7534151433374101 0.19564659391684702 27.00209258244179);
	--color-balatro-red-500: oklch(0.6917689291717627 0.19564659391684702 27.00209258244179);
	--color-balatro-red-600: oklch(0.5917689291717627 0.19564659391684702 27.00209258244179);
	--color-balatro-red-700: oklch(0.49176892917176274 0.19564659391684702 27.00209258244179);
	--color-balatro-red-800: oklch(0.39176892917176265 0.19564659391684702 27.00209258244179);
	--color-balatro-red-900: oklch(0.29176892917176267 0.19564659391684702 27.00209258244179);
	--color-balatro-red-950: oklch(0.24176892917176274 0.19564659391684702 27.00209258244179);

	--drop-shadow-dynamic: var(--shadow-x) 4px 0px #00000040;
	--drop-shadow-extrude: 0px 4px 0px #00000080;
	--drop-shadow-elevated: 0px 0.1em 0px #00000040;
}

@utility rounded-pixel-1-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(0px 100%, 100% 100%, 100% 0px, 0px 0px);
	}
}

@utility rounded-pixel-2-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(0px calc(100% - calc(1px * --value(integer))), calc(1px * --value(integer)) calc(100% - calc(1px * --value(integer))), calc(1px * --value(integer)) 100%, calc(100% - calc(1px * --value(integer))) 100%, calc(100% - calc(1px * --value(integer))) calc(100% - calc(1px * --value(integer))), 100% calc(100% - calc(1px * --value(integer))), 100% calc(1px * --value(integer)), calc(100% - calc(1px * --value(integer))) calc(1px * --value(integer)), calc(100% - calc(1px * --value(integer))) 0px, calc(1px * --value(integer)) 0px, calc(1px * --value(integer)) calc(1px * --value(integer)), 0px calc(1px * --value(integer)));
	}
}

@utility rounded-pixel-4-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(
			0px calc(100% - calc(2px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(2px * --value(integer)) 100%,
			calc(100% - calc(2px * --value(integer))) 100%,
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			100% calc(100% - calc(2px * --value(integer))),
			100% calc(2px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) 0px,
			calc(2px * --value(integer)) 0px,
			calc(2px * --value(integer)) calc(1px * --value(integer)),
			calc(1px * --value(integer)) calc(1px * --value(integer)),
			calc(1px * --value(integer)) calc(2px * --value(integer)),
			0px calc(2px * --value(integer))
		);
	}
}

@utility rounded-pixel-5-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(
			0px calc(100% - calc(3px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(3px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(3px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(3px * --value(integer)) 100%,
			calc(100% - calc(3px * --value(integer))) 100%,
			calc(100% - calc(3px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(3px * --value(integer))),
			100% calc(100% - calc(3px * --value(integer))),
			100% calc(3px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(3px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) 0px,
			calc(3px * --value(integer)) 0px,
			calc(3px * --value(integer)) calc(1px * --value(integer)),
			calc(2px * --value(integer)) calc(1px * --value(integer)),
			calc(1px * --value(integer)) calc(2px * --value(integer)),
			calc(1px * --value(integer)) calc(3px * --value(integer)),
			0px calc(3px * --value(integer))
		);
	}
}

@utility rounded-pixel-6-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(
			0px calc(100% - calc(4px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(4px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(4px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(4px * --value(integer)) 100%,
			calc(100% - calc(4px * --value(integer))) 100%,
			calc(100% - calc(4px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(4px * --value(integer))),
			100% calc(100% - calc(4px * --value(integer))),
			100% calc(4px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(4px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(4px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(4px * --value(integer))) 0px,
			calc(4px * --value(integer)) 0px,
			calc(4px * --value(integer)) calc(1px * --value(integer)),
			calc(2px * --value(integer)) calc(1px * --value(integer)),
			calc(2px * --value(integer)) calc(2px * --value(integer)),
			calc(1px * --value(integer)) calc(2px * --value(integer)),
			calc(1px * --value(integer)) calc(4px * --value(integer)),
			0px calc(4px * --value(integer))
		);
	}
}

@utility rounded-pixel-7-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(
			0px calc(100% - calc(4px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(4px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(3px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(3px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(3px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(3px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(4px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(4px * --value(integer)) 100%,
			calc(100% - calc(4px * --value(integer))) 100%,
			calc(100% - calc(4px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(3px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(3px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(3px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(3px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(4px * --value(integer))),
			100% calc(100% - calc(4px * --value(integer))),
			100% calc(4px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(4px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(3px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(3px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(4px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(4px * --value(integer))) 0px,
			calc(4px * --value(integer)) 0px,
			calc(4px * --value(integer)) calc(1px * --value(integer)),
			calc(3px * --value(integer)) calc(1px * --value(integer)),
			calc(3px * --value(integer)) calc(2px * --value(integer)),
			calc(2px * --value(integer)) calc(2px * --value(integer)),
			calc(2px * --value(integer)) calc(3px * --value(integer)),
			calc(1px * --value(integer)) calc(3px * --value(integer)),
			calc(1px * --value(integer)) calc(4px * --value(integer)),
			0px calc(4px * --value(integer))
		);
	}
}

@utility rounded-pixel-8-* {
	&::after {
		content: "";
		@apply absolute size-full top-0 left-0 -z-1;
		clip-path: polygon(
			0px calc(100% - calc(5px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(5px * --value(integer))),
			calc(1px * --value(integer)) calc(100% - calc(3px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(3px * --value(integer))),
			calc(2px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(3px * --value(integer)) calc(100% - calc(2px * --value(integer))),
			calc(3px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(5px * --value(integer)) calc(100% - calc(1px * --value(integer))),
			calc(5px * --value(integer)) 100%,
			calc(100% - calc(5px * --value(integer))) 100%,
			calc(100% - calc(5px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(3px * --value(integer))) calc(100% - calc(1px * --value(integer))),
			calc(100% - calc(3px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(2px * --value(integer))),
			calc(100% - calc(2px * --value(integer))) calc(100% - calc(3px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(3px * --value(integer))),
			calc(100% - calc(1px * --value(integer))) calc(100% - calc(5px * --value(integer))),
			100% calc(100% - calc(5px * --value(integer))),
			100% calc(5px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(5px * --value(integer)),
			calc(100% - calc(1px * --value(integer))) calc(3px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(3px * --value(integer)),
			calc(100% - calc(2px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) calc(2px * --value(integer)),
			calc(100% - calc(3px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(5px * --value(integer))) calc(1px * --value(integer)),
			calc(100% - calc(5px * --value(integer))) 0px,
			calc(5px * --value(integer)) 0px,
			calc(5px * --value(integer)) calc(1px * --value(integer)),
			calc(3px * --value(integer)) calc(1px * --value(integer)),
			calc(3px * --value(integer)) calc(2px * --value(integer)),
			calc(2px * --value(integer)) calc(2px * --value(integer)),
			calc(2px * --value(integer)) calc(3px * --value(integer)),
			calc(1px * --value(integer)) calc(3px * --value(integer)),
			calc(1px * --value(integer)) calc(5px * --value(integer)),
			0px calc(5px * --value(integer))
		);
	}
}

@utility bg-pixel-* {
	@apply bg-[--value(--color-*)];
	@apply bg-[--value(--color-*)]/[calc(--modifier(integer)_*_1%)];
	&[class*="rounded-pixel-"] {
		@apply bg-transparent;
		&::after {
			@apply bg-[--value(--color-*)];
			@apply bg-[--value(--color-*)]/[calc(--modifier(integer)_*_1%)];
		}
	}
}

@utility text-shadow-elevated {
	@apply relative flex z-0;
	&::before {
		@apply absolute text-transparent scale-95 -z-1;
		content: var(--text-shadow-elevated-content);

		text-shadow: 0px 0.1em 0px #00000040;
	}
}

* {
	font-smooth: antialiased;
	-webkit-font-smoothing: antialiased;
}
